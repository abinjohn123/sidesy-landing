---
import { getCollection } from 'astro:content';

import Note from '@/components/note/Note.astro';
import PageLayout from '@/layouts/Base.astro';
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro';

// If you're using an adaptor in SSR mode, getStaticPaths wont work -> https://docs.astro.build/en/guides/routing/#modifying-the-slug-example-for-ssr
export const getStaticPaths = (async () => {
  const allNotes = await getCollection('note');
  return allNotes.map((note) => ({
    params: { slug: note.id },
    props: { note },
  }));
}) satisfies GetStaticPaths;

export type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { note } = Astro.props;

const meta = {
  description:
    note.data.description ||
    `Read about my note posted on: ${note.data.publishDate.toLocaleDateString()}`,
  title: note.data.title,
};
---

<PageLayout meta={meta}>
  <div
    class="fixed left-0 top-0 z-10 flex h-16 w-full overflow-hidden bg-bgColor md:h-20"
  >
    <!-- Background 
			TODO: This approach is not optimal and requires improvements. 
  			- Too many absolutely positioned elements can affect performance. 
  		-->
    <div
      class="pointer-events-none absolute left-1/2 top-0 -ml-[50vw] min-h-screen w-screen blur-2xl"
    >
      <!--
			<div class="fixed blur-xl top-0 left-0 w-full h-16 md:h-20 bg-gradient-to-b from-indigo-300 via-purple-300 to-transparent opacity-10 dark:opacity-5"></div>
			-->
      <div
        class="absolute right-[25%] top-[-90%] h-full w-[75%] rounded-full bg-gradient-to-b from-blue-300 via-pink-300 to-transparent opacity-40 dark:opacity-5"
      >
      </div>
      <div
        class="absolute left-[25%] top-[-90%] h-full w-[75%] rounded-full bg-gradient-to-b from-blue-300 via-pink-300 to-transparent opacity-40 dark:opacity-5"
      >
      </div>
      <div
        class="absolute right-[25%] top-[-85%] h-full w-[55%] rounded-full bg-gradient-to-b from-purple-300 via-blue-300 to-transparent opacity-40 dark:opacity-5"
      >
      </div>
      <div
        class="absolute left-[25%] top-[-85%] h-full w-[55%] rounded-full bg-gradient-to-b from-indigo-300 via-orange-300 to-transparent opacity-40 dark:opacity-5"
      >
      </div>
      <div
        class="absolute left-[-25%] top-[-75%] h-full w-[65%] rounded-full bg-gradient-to-b from-blue-300 via-pink-300 to-transparent opacity-30 dark:opacity-5"
      >
      </div>
      <div
        class="absolute right-[-25%] top-[-75%] h-full w-[65%] rounded-full bg-gradient-to-b from-purple-300 via-blue-300 to-transparent opacity-30 dark:opacity-5"
      >
      </div>
      <div
        class="absolute left-[-30%] top-[-85%] h-full w-[85%] rounded-full bg-gradient-to-b from-indigo-300 via-orange-300 to-transparent opacity-60 dark:opacity-5"
      >
      </div>
      <div
        class="absolute right-[-30%] top-[-85%] h-full w-[85%] rounded-full bg-gradient-to-b from-orange-300 via-indigo-300 to-transparent opacity-60 dark:opacity-5"
      >
      </div>
    </div>
  </div>
  <Note as="h1" note={note} />
</PageLayout>

<script>
  // Wait for the content to fully load
  document.addEventListener('DOMContentLoaded', () => {
    const buttonsPanel = document.getElementById('buttons-panel');

    if (buttonsPanel) {
      buttonsPanel.classList.add('fixed');
      console.log("Class 'fixed' added to the buttons-panel element.");
    } else {
      console.error("Element with ID 'buttons-panel' not found.");
    }
  });
</script>
